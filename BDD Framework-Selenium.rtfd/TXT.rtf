{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Georgia-Bold;\f1\fnil\fcharset0 Georgia;\f2\fswiss\fcharset0 Helvetica;
\f3\fswiss\fcharset0 Helvetica-Bold;\f4\fnil\fcharset0 GillSans;\f5\fnil\fcharset0 Menlo-Regular;
\f6\fnil\fcharset0 Menlo-Bold;\f7\fnil\fcharset0 Apple-Chancery;\f8\fnil\fcharset0 Menlo-BoldItalic;
}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;\red127\green0\blue128;
\red251\green2\blue7;\red96\green96\blue96;\red11\green97\blue255;\red251\green2\blue7;\red0\green0\blue0;
\red38\green139\blue210;\red147\green161\blue161;\red128\green0\blue0;\red0\green128\blue255;\red128\green128\blue0;
\red0\green128\blue128;\red255\green128\blue0;\red100\green100\blue100;\red127\green0\blue85;\red42\green0\blue255;
\red0\green0\blue255;\red0\green0\blue192;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c100000\c100000\c100000;\cssrgb\c57919\c12801\c57269;
\cssrgb\c100000\c14913\c0;\cssrgb\c45098\c45098\c45098;\cssrgb\c0\c48235\c100000;\cssrgb\c100000\c14913\c0;\cssrgb\c0\c0\c0;
\csgenericrgb\c14902\c54510\c82353;\csgenericrgb\c57647\c63137\c63137;\csgenericrgb\c50196\c0\c0;\csgenericrgb\c0\c50196\c100000;\csgenericrgb\c50196\c50196\c0;
\csgenericrgb\c0\c50196\c50196;\csgenericrgb\c100000\c50196\c0;\csgenericrgb\c39216\c39216\c39216;\csgenericrgb\c49804\c0\c33333;\csgenericrgb\c16471\c0\c100000;
\cssrgb\c1680\c19835\c100000;\csgenericrgb\c0\c0\c75294;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid201\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\paperw11900\paperh16840\margl1011\margr1011\margb1445\margt1011\vieww14000\viewh16000\viewkind1\viewscale220
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\fi722\sl288\slmult1\pardirnatural\partightenfactor0

\f0\b\fs18 \cf0 CYPRESS Vs SELENIUM\
====================\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\fi722\sl288\slmult1\pardirnatural\partightenfactor0

\f1\b0 \cf0 (i)Cypress is web automation tool which supports 
\f0\b MOCHA TEST FRAMEWORK
\f1\b0 \
(ii)Cypress has 
\f0\b automatic Scrolls
\f1\b0  & 
\f0\b automatic waits.\

\f1\b0 No need to explicitly add code for that the way we need in selenium\
(iii) there is 
\f0\b NO MIDDLE MAN PROXY 
\f1\b0 like driver executer like in selenium. hence faster. it directly works with the browser\
(iv)It is more developer friendly\
-unit testing\
-integration testing\
-functional testing\
\
\pard\pardeftab720\partightenfactor0

\f2 \cf2 \cb3 \expnd0\expndtw0\kerning0
Limitations of Selenium:\
\cf4 	Though selenium is an established solution(2004), cypress is new(2015)\cf2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa80\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 		\cf5 \expnd0\expndtw0\kerning0
No 
\f3\b built in \'91reporting\'92 mechanism\cf2 \
\ls1\ilvl0
\f2\b0 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Handling 
\f3\b \cf5 page load or element load is difficult
\f2\b0 \cf2 \cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Limited support for 
\f3\b \cf5 testing \'91images\'92
\f2\b0 \cf2 \cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Creating test cases is 
\f3\b \cf5 time-consuming because of \'91middle man proxy \'91driver server\cf2 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f2\b0 \cf2 \cb3 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Difficult to set up 
\f3\b test environment 
\f2\b0 a
\f3\b s compared to Cypress\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa200\partightenfactor0
\ls2\ilvl0
\f2\b0\fs32 \cf6 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}
\fs18 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 There is no network lag and flakiness in tests executed with Cypress as tests are executed inside the browser and have complete visibility of everything happening in the application synchronously. It even knows when an\'a0{\field{\*\fldinst{HYPERLINK "https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Animations"}}{\fldrslt \cf7 \strokec7 element is animating}}\'a0and waits for it to stop animating. This makes Cypress tests more flake resistant compared to tests executed with other test automation tools.
\fs32 \cb1 \
\pard\tx560\pardeftab720\partightenfactor0

\fs18 \cf2 \outl0\strokewidth0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\fi722\sl288\slmult1\pardirnatural\partightenfactor0

\f1 \cf0 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\partightenfactor0

\f3\b \cf2 \cb3 \expnd0\expndtw0\kerning0
Limitations of Cypress\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\fi722\sl288\slmult1\pardirnatural\partightenfactor0

\f1\b0 \cf0 \cb1 \kerning1\expnd0\expndtw0 1))Cypress is only JS based .\
Cybpress only supports Mocha JS Test Framework.\
\
while Selenium supports 6 language and almost every testing framework, junit,testng,bdd etc\
\
\
selenium supports various programming language
\f2 \cf2 \cb3 \expnd0\expndtw0\kerning0
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa80\partightenfactor0
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 		
\f3\b \expnd0\expndtw0\kerning0
Parallel testing not allowed\cb1 \
\ls3\ilvl0
\f2\b0 \cb3 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
It doesn\'92t provide support for multi-tabs\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Cypress 
\f3\b only JavaScript
\f2\b0  for creating test cases\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Cypress doesn\'92t provide support for browsers like 
\f3\b Safari and IE a
\f2\b0 t the moment.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 		\expnd0\expndtw0\kerning0
Limited support for iFrames\cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\fi722\pardirnatural\partightenfactor0

\f1 \cf0 \kerning1\expnd0\expndtw0 {{\NeXTGraphic Screenshot 2022-02-19 at 11.34.41 AM.png \width28800 \height18000 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\fi722\pardirnatural\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\fi722\sl288\slmult1\pardirnatural\partightenfactor0

\f0\b \cf0 \
BDD-Cucumber Framework\
=====================\
\
Why BDD?Purpose of BDD?\
\
WHAT?
\f1\b0 BDD stands for Behaviour Driven Development ie a \cf8 product can be developed based on  its Behavioural specifications.
\f0\b \
\cf0 \
Advantages of Cucumber:\
-open source\
-Gherkin language <technical +non-technical>\
-integration with so many tools like \cf8 maven\cf0 , \cf8 selenium\cf0 ,\cf8 junit\cf0 ,\cf8 testng\cf0  etc\
-datatables- code reusability \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\fi722\sl288\slmult1\pardirnatural\partightenfactor0

\f1\b0 \cf0 BDD is not an automation tool but 
\f0\b a framework for writing automated test cases.\
\

\f1\b0 1)For everyone to understand the requirement in the same way.
\f0\b \

\f1\b0 Is to have a language which is \cf4 understandable by all stakeholders of the product - Technical + Non-Technical\cf0 \
\
2)For every QA to write the test cases in a \cf4 common format\cf0 \
\
Let\'92s say if new bees are joining the organisation, they want to understand the product, the best way is to go through the Gherkin language test cases(English).\
\
Each \cf4 Test Scenario\cf0  reflects  a \cf4 Business Value in BDD\cf0 \
\
Every QA can stick to the same format of defining test case -uniformity in Organisation/project\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\fi722\sl288\slmult1\pardirnatural\partightenfactor0

\f0\b \cf4 Example: when I joined Barclays , it took me just a week to understand the full product because i went to the automation driver test suite having those BDD test cases written in english. I could observe  the + and the - scenarios easil\cf0 y\
\
Why we can use BDD with Selenium?
\f1\b0 \
Because \cf4 selenium supports\cf0  annotation \cf4 Given, When,Then,And,Feature.\
\cf9 These all keywords are detected by 
\f0\b cucumber
\f1\b0  using the plugin called 
\f0\b \cf8 Natural
\f1\b0  
\f0\b Plugin
\f1\b0 \cf9  which we install as step1 after creating the maven project.\cf4 \
\

\f0\b \cf9 How to Setup Selenium project using Cucumber?\
=====================================\
Step1:using \cf8 Natural Plugin of Eclipse\cf9 \
Step2:using dependencies in pom.xml \
	.cucumber-core\
	.cucumber-java\
	.cucumber-testng\
	.cucumber-junit\
Step3:We create a new maven project, select artefact 
\f1\b0 \cf0 as\
\cf8 maven-archiytype-quick-start template \cf0 of maven\
	GroupID: package name\
	Artifact ID : project name
\f0\b \cf9 \
\

\f1\b0 Using 
\f0\b \cf8 Maven
\f1\b0 \cf9  , we can create \cf8 cucumber structure\cf9  in selenium project.\
\cf8 Cucumber is template sensitive \cf9 . We must define \cf8 our packages inside 
\f0\b\fs26 src/test/java\cf9 \

\f1\b0\fs18 \cf8 everything of cucumber tests (feature file, step-definition, test-runner )we write inside src/test/java of MAVEN structure.\cf9 \

\f4 \cf0 \

\f0\b MAVEN:
\f1\b0 \
Maven is a very good \cf8 build management tool\cf0  which provides 
\f0\b \cf8 skeleton/template 
\f1\b0 \cf0 for lot of project types etc. We can do it manually but then it will be cumbersome\
-rest-assured\
-POM\
-cucumber\
\
We use 
\f0\b Maven for 2 things:-
\f1\b0 \
-To create project structure\
-To create JARS using pom.xml\
\
We create a new maven project, select artefact as\
cucumber \cf8 maven archetype-quick-start \cf9 template\cf8  \cf0 of maven\
GroupID: package name\
Artefact ID : project name\
\
DEPENDENCIES NEEDED IN BDD?\
\cf8 Cucumber-java\
Cucumber -junit\
cucumber-core\
cucumber-testng\
-
\fs26 all must be in same version
\fs18 \
\
\cf9 TERMINOLOGIES IN CUCUMBER?\cf0 \
1. Feature File:-All the Test Cases will be written in Gherkin language in a feature file\
2.Step Definition File. :- Contains Actual Code\
3. JUnit Test runner/TestNg Test runners:- The driver . To connect all the dots.it needs #1 and #2.\
\
\pard\pardeftab720\partightenfactor0

\f5 \cf0 \

\f6\b \
Maven dependencies needed for Cucumber:\
\
\pard\pardeftab720\partightenfactor0

\f5\b0 \cf8 V.I>:-cucumber-core,cucumber-java,cucumber-junit,cucucmber-testng all dependencies in maven must be of same version in-order to work 
\f6\b \cf0 \
\pard\pardeftab720\partightenfactor0

\f5\b0 \cf0 \
	<\cf10 dependency\cf0 >\
			<\cf10 groupId\cf0 >org.junit.jupiter</\cf10 groupId\cf0 >\
			<\cf10 artifactId\cf0 >j
\f6\b \cf8 unit-jupiter-engine
\f5\b0 \cf0 </\cf10 artifactId\cf0 >\
			<\cf10 version\cf0 >5.7.1</\cf10 version\cf0 >\
			<\cf10 scope\cf0 >test</\cf10 scope\cf0 >\
		</\cf10 dependency\cf0 >\
		\cf11 <!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-java -->\cf0 \
		<\cf10 dependency\cf0 >\
			<\cf10 groupId\cf0 >io.cucumber</\cf10 groupId\cf0 >\
			<\cf10 artifactId\cf0 >
\f6\b \cf8 cucumber-java
\f5\b0 \cf0 </\cf10 artifactId\cf0 >\
			<\cf10 version\cf0 >1.2.6</\cf10 version\cf0 >\
			>\
		</\cf10 dependency\cf0 >\
		\cf11 <!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-junit -->\cf0 \
		<\cf10 dependency\cf0 >\
			<\cf10 groupId\cf0 >io.cucumber</\cf10 groupId\cf0 >\
			<\cf10 artifactId\cf0 >
\f6\b \cf8 cucumber-junit
\f5\b0 \cf0 </\cf10 artifactId\cf0 >\
			<\cf10 version\cf0 >1.2.6</\cf10 version\cf0 >\
			<\cf10 scope\cf0 >test</\cf10 scope\cf0 >\
		</\cf10 dependency\cf0 >\
		\cf11 <!-- https://mvnrepository.com/artifact/info.cukes/cucumber-core -->\cf0 \
		<\cf10 dependency\cf0 >\
			<\cf10 groupId\cf0 >info.cukes</\cf10 groupId\cf0 >\
			<\cf10 artifactId\cf0 >
\f6\b \cf8 cucumber-core
\f5\b0 \cf0 </\cf10 artifactId\cf0 >\
			<\cf10 version\cf0 >1.2.6</\cf10 version\cf0 >\
			<\cf10 type\cf0 >pom</\cf10 type\cf0 >\
		</\cf10 dependency\cf0 >\
\
		<\cf10 dependency\cf0 >\
			<\cf10 groupId\cf0 >org.junit.jupiter</\cf10 groupId\cf0 >\
			<\cf10 artifactId\cf0 >
\f6\b \cf8 junit-jupiter-params
\f5\b0 \cf0 </\cf10 artifactId\cf0 >\
			<\cf10 version\cf0 >5.7.1</\cf10 version\cf0 >\
			<\cf10 scope\cf0 >test</\cf10 scope\cf0 >\
		</\cf10 dependency\cf0 >\
		\cf11 <!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-testng -->\cf0 \
		<\cf10 dependency\cf0 >\
			<\cf10 groupId\cf0 >io.cucumber</\cf10 groupId\cf0 >\
			<\cf10 artifactId\cf0 >
\f6\b \cf8 cucumber-testng
\f5\b0 \cf0 </\cf10 artifactId\cf0 >\
			<\cf10 version\cf0 >1.2.6</\cf10 version\cf0 >\
		</\cf10 dependency\cf0 >\
\
\
\
\
\
\
\
\
\
\pard\pardeftab720\partightenfactor0

\f6\b \cf12 #Keywords Summary :
\f5\b0 \cf0 \
\cf12 #Feature: List of scenarios,
\f6\b \cf8 Actual Business Requirement
\f5\b0 \cf0 \
\cf12 #Scenario: Business rule through list of steps with arguments, 
\f6\b \cf8 Test Case Description
\f5\b0 \cf0 \
\cf12 #Given: Some 
\f6\b \cf8 precondition 
\f5\b0 \cf12 step\cf0 \
\cf12 #When: Some key 
\f6\b \cf8 actions\

\f5\b0 \cf12 #Then: To observe outcomes or 
\f6\b \cf8 validation\

\f5\b0 \cf12 #And,But: To enumerate more Given,When,Then steps\cf0 \
\cf12 #
\f6\b \cf5 Scenario Outline:
\f5\b0 \cf12  List of steps for 
\f6\b \cf5 data-driven 
\f5\b0 \cf12 as an Examples and <placeholder>\cf0 \
\cf12 #Examples: Container for s table\cf0 \
\cf12 #Background: List of steps run before each of the scenarios\cf0 \
\cf12 #""" (Doc Strings)\cf0 \
\cf12 #| (Data Tables)\cf0 \
\cf12 #@ (Tags/Labels):To group Scenarios\cf0 \
\cf12 #<> (placeholder)\cf0 \
\cf12 #""\cf0 \
\cf12 ## (Comments)\cf0 \
\cf12 #Sample Feature Definition Template
\f1 \cf0 \
\pard\pardeftab720\partightenfactor0

\f5 \cf13 @tag\cf0 \
\pard\pardeftab720\partightenfactor0
\cf14 Feature: \cf0 Title of your feature\
  I want to use this template for my feature file\
\
  \cf13 @tag1\cf0 \
  \cf14 Scenario: \cf0 Title of your scenario\
    \cf15 Given \cf0 I want to write a step with precondition\
    \cf15 And \cf0 some other precondition\
    \cf15 When \cf0 I complete action\
    \cf15 And \cf0 some other action\
    \cf15 And \cf0 yet another action\
    \cf15 Then \cf0 I validate the outcomes\
    \cf15 And \cf0 check more outcomes\
\
\pard\pardeftab720\partightenfactor0

\f6\b \cf8 PARAMETERIZATION IN BDD:
\f5\b0 \cf0 \
If we want to use 
\f6\b parameterisation
\f5\b0  , then we use 
\f6\b Scenario Outline
\f5\b0  instead of 
\f6\b Scenario
\f5\b0 .\
Along with 
\f6\b Examples with Data-Table 
\f5\b0 \
  \cf13 @tag2\cf0 \
  \cf14 Scenario Outline: 
\f6\b \cf0 Login to EBC2 successfully
\f5\b0 \
    \cf15 Given \cf0 Initialise the \cf16 <browser>\cf0 \
    \cf15 And \cf0 Navigate to EBC2 production link\
\pard\pardeftab720\partightenfactor0
\cf15     And \cf9 Land on the EBC2 loginPage\cf0 \
    \cf15 When\cf0  The user enters  \cf16 <username> \cf9 and\cf16  <password>\cf0  in the EBC2 Login Page\
    \cf15 Then \cf0 Verify if the user is successfully logged in to the EBC2 homePage\
 \
    \cf14 Examples: \cf0 \
      |\cf16 browser\cf0 <tabSpace> |\cf16 username\cf0 <tabSpace> |\cf16 password\cf0 <tabSpace> |\
      |chrome |\'94Sakshi\'94 |\'94anie@tubco1!\'94 | --dataSet1\
      |firefox |\'94Sakshi2\'94 |\'94anie@tubco1!\'94 | ---dataSet2\
      |Edge |\'94Sakshi3\'94 |\'94anie@tubco1!\'94 | --dataSet3\
      \
\
\pard\pardeftab720\partightenfactor0

\f6\b \cf0 How to MAP Feature File(Test Cases) with StepDefinition File (.java file with code)?
\f5\b0 \
- StepDefinition Tag name should match the description of each of the keywords given in the feature file.\
- alternatively, you can automatically generate stepDefinition for each of the tags mentioned in the feature file using \cf8 Tidy Gherkin plugin /Pretty Gherkin plugin\
\
\pard\pardeftab720\partightenfactor0

\f6\b \cf9 -Test Runner\
\pard\pardeftab720\partightenfactor0
\cf8 Its a java class which links the feature and the step-definition files.\
it has an empty class.\cf9 \
\
<A JUnit runner - this TestRunner is running using JUnit Library>
\f5\b0 \cf8 \
\
\pard\pardeftab720\partightenfactor0
\cf17 @RunWith\cf0 (Cucumber.
\f6\b \cf18 class
\f5\b0 \cf0 )\
\cf17 @CucumberOptions\cf0 (\
	features=\cf19 "src/test/java/FeaturesSakshi"\cf0 ,\
	glue=\cf19 "src/test/java/stepDefinitionSakshi/stepDefinitionSakshi.java"\cf0 \
)\

\f6\b \cf18 public
\f5\b0 \cf0  
\f6\b \cf18 class
\f5\b0 \cf0  MyTestrunner \{\
\
\}\
\pard\pardeftab720\partightenfactor0
\cf8 \
\
\
\
\pard\pardeftab720\partightenfactor0

\f6\b \cf8 Regular expressions\cf9  in stepDefinition tagLine is needed when we want to pass the value username and password via the feature file.\
Also, we need to pass those as argument of the function
\f5\b0 \cf8 \
\
\pard\pardeftab720\partightenfactor0
\cf9 \
Every step definition starts with 
\f6\b ^
\f5\b0  and ends with 
\f6\b $.
\f5\b0 \cf8 \
\
\pard\pardeftab720\partightenfactor0
\cf17 @When\cf0 (\cf19 "
\f6\b \cf8 ^
\f5\b0 \cf20 user\cf19  logging to the net-banking page using 
\f6\b \cf8 (.*)
\f5\b0 \cf19  & 
\f6\b \cf8 (.*)$
\f7\b0 \'94)
\f5 \cf0 \
	
\f6\b \cf18 public
\f5\b0 \cf0  
\f6\b \cf18 void
\f5\b0 \cf0  user_loggin_to_the_netbanking_page_using_something_something\cf8 (
\f6\b String strArg1, String strArg2)
\f5\b0 \cf0  \{\
		System.
\f8\i\b \cf21 out
\f5\i0\b0 \cf0 .println(\cf19 "executing:- user loggin to the netbanking page using using Amol user"\cf0 +
\f6\b \cf8 strArg1
\f5\b0 \cf0 +\cf19 " and his password"\cf0 +
\f6\b \cf8 strArg2
\f5\b0 \cf0 );\
	\}\
\
\
\pard\pardeftab720\partightenfactor0

\f6\b \cf0 HOW TO INTEGRATE TESTNG AND MAVEN?\
HOw TO CONVERT A JUNIT RUNNER TO A TESTNG RUNNER?\
\
\
Step1: Get the jars from Maven repo for Cucumber & TestNg integration\

\f5\b0 <!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-testng -->\
<dependency>\
    <groupId>io.cucumber</groupId>\
    <artifactId>
\f6\b \cf8 cucumber-testng
\f5\b0 \cf0 </artifactId>\
    <version>7.2.3</version>\
</dependency>\

\f6\b \
step2: Import cucumber.api.testng
\f5\b0 .
\f6\b \cf8 abstractTestNgCucumberTests.\
\cf0 using \cf8 AbstractTestNgCucumberTests\cf0  Class\
\
\
Step3: Extend \cf8 abstractTestNgCucumberTests \cf9 to the MyTestRunner class\
\pard\pardeftab720\partightenfactor0

\f5\b0 \cf17 ====================================================================\
\pard\pardeftab720\partightenfactor0
\cf0 \
import cucumber.api,testng.
\f6\b \cf8 abstractTestNgCucumberTests;\

\f5\b0 \cf0 \
\pard\pardeftab720\partightenfactor0
\cf17 @CucumberOptions\cf0 (\
	features=\cf19 "src/test/java/FeaturesSakshi"\cf0 ,\
	glue=\cf19 "src/test/java/stepDefinitionSakshi/stepDefinitionSakshi.java"\cf0 \
)\

\f6\b \cf18 public
\f5\b0 \cf0  
\f6\b \cf18 class
\f5\b0 \cf0  MyTestrunner extends 
\f6\b \cf8 AbstractTestNgCucumberTests
\f5\b0 \cf0  \{\
\
\}\
\
\
Cucumber Interview Questions?\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://www.youtube.com/watch?v=dvhd5F0ckSE"}}{\fldrslt \cf0 https://www.youtube.com/watch?v=dvhd5F0ckSE}}\
\
Hooks in cucumber? code blocks\
Test Harness?{{\NeXTGraphic Screenshot 2022-02-21 at 1.48.01 PM.png \width28800 \height18000 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}}{\*\beandata789c9d935d6f82301486aff157748db752d876b12d8851c1c4cc2099b86497153a65e32ba5cef1ef57444aeb66b68c1bda73fabe4f7b4e6b8d3ed3047c105ac6793684a66e4040b2308fe26c3b84eb6036b88323bb675d39cb69f0e2bba048e292017f3d59cca7000e101a17454210720207f88bf92a00dc0321d78300ee182b1e103a1c0e3aae57e9619ed60b4be4d3bc2094550b6e36e0023d6211e498c65dd90e8f4671c8ec9e66bd93caee631aee62bec242f594474b46f9666d6ff5482a128d45fa146f75f9e68d84ac14324c29ae07c2a09fed934492692d573b3984092e855e4e37f9e9acbf9e3b5d5eb3e28c912da1f6ad85dae1518854636fa5f39fec2cf6a6502e603aceb5ca5140a8f36ca16715f93ff7e64fdc2eda567ce28ebd27f6ead6f78d778ef1e866cf48f9dcf4dfdba71ba591d2490dd334ee0df5c03ff68b5c3a9fb8360e57711aa6958c92572c8f8552b2dfead9d0329c1289f70b4354a4736bbc585e887b2a8a56cf2704670e665830cece7cde24513053ad540756ded6e9e109b6501bf52759b43a0b1d5facddfb02aa1d4161}