{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Bold;
\f3\fnil\fcharset0 Menlo-BoldItalic;\f4\fnil\fcharset0 HelveticaNeue-Bold;\f5\fnil\fcharset0 HelveticaNeue;
}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red127\green0\blue85;\red251\green2\blue7;
\red106\green62\blue62;\red63\green127\blue95;\red0\green0\blue192;\red42\green0\blue255;\red0\green0\blue0;
\red21\green22\blue24;}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c100000;\csgenericrgb\c49804\c0\c33333;\cssrgb\c100000\c14913\c0;
\csgenericrgb\c41569\c24314\c24314;\csgenericrgb\c24706\c49804\c37255;\csgenericrgb\c0\c0\c75294;\csgenericrgb\c16471\c0\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c10980\c11373\c12157;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid101\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid201\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid202\'01\'01;}{\levelnumbers\'01;}\fi-360\li1440\lin1440 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid301\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid4}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}
\paperw11900\paperh16840\margl1011\margr1011\margb1445\margt1011\vieww14000\viewh16000\viewkind0\viewscale150
\deftab720
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa210\partightenfactor0
\ls1\ilvl0
\f0\fs18 \cf0 \cb2 {\listtext	1	}USER INPUT IN JAVA
\f1 \cb1 \
\pard\pardeftab720\partightenfactor0
\ls1\ilvl0
\f2\b \cf3 {\listtext	2	}import
\f1\b0 \cf0  java.util.\cf4 Scanner\cf0 ;\
{\listtext	3	}\
\ls1\ilvl0
\f2\b \cf3 {\listtext	4	}public
\f1\b0 \cf0  
\f2\b \cf3 class
\f1\b0 \cf0  UserinputInJavaDemo \{\
{\listtext	5	}\
{\listtext	6	}
\f2\b \cf3 public
\f1\b0 \cf0  
\f2\b \cf3 static
\f1\b0 \cf0  
\f2\b \cf3 void
\f1\b0 \cf0  main(String[] \cf5 args\cf0 ) \{\
{\listtext	7	}\
{\listtext	8	}\cf6 //We can take all dataType user input using below method\cf0 \
{\listtext	9	}Scanner \cf5 \ul \ulc5 s\cf0 \ulnone  = 
\f2\b \cf3 new
\f1\b0 \cf0  Scanner(System.
\f3\i\b \cf7 in
\f1\i0\b0 \cf0 );\
{\listtext	10	}String \cf5 strvariable\cf0  = \cf5 s\cf0 .next(); \cf6 // default is String\cf0 \
{\listtext	11	}
\f2\b \cf3 int
\f1\b0 \cf0  \cf5 integerVariable\cf0  = \cf5 s\cf0 .nextInt(); \cf6 //for \ul int\ulnone  input\cf0 \
{\listtext	12	}
\f2\b \cf3 float
\f1\b0 \cf0  \cf5 f\cf0  = \cf5 s\cf0 .nextFloat(); \cf6 //float input\cf0 \
{\listtext	13	}
\f2\b \cf3 boolean
\f1\b0 \cf0  \cf5 b\cf0  = \cf5 s\cf0 .nextBoolean(); \cf6 //for boolean input\cf0 \
{\listtext	14	}
\f2\b \cf3 double
\f1\b0 \cf0  \cf5 d\cf0  = \cf5 s\cf0 .nextDouble(); \cf6 //for double input\cf0 \
{\listtext	15	}\
{\listtext	16	}System.
\f3\i\b \cf7 out
\f1\i0\b0 \cf0 .println(\cf8 " My user input String"\cf0 +\cf5 strvariable\cf0 +\cf8 " integer is "\cf0 +\cf5 integerVariable\cf0 +\cf8 " float is "\cf0 + \cf5 f\cf0 +\cf8 " boolean is "\cf0 +\cf5 b\cf0 +\cf8 " double is "\cf0 +\cf5 d\cf0 );\
{\listtext	17	}\
{\listtext	18	}\cf6 //How to create an array using user input in JAVA\cf0 \
{\listtext	19	}System.
\f3\i\b \cf7 out
\f1\i0\b0 \cf0 .println(\cf8 "\\nEnter Array size:"\cf0 );\
{\listtext	20	}
\f2\b \cf3 int
\f1\b0 \cf0  \cf5 sizearray\cf0  = \cf5 s\cf0 .nextInt();\
{\listtext	21	}\
{\listtext	22	}
\f2\b \cf3 int
\f1\b0 \cf0 [] \cf5 array\cf0  = 
\f2\b \cf3 new
\f1\b0 \cf0  
\f2\b \cf3 int
\f1\b0 \cf0 [\cf5 sizearray\cf0 ];\
{\listtext	23	}
\f2\b \cf3 for
\f1\b0 \cf0  (
\f2\b \cf3 int
\f1\b0 \cf0  \cf5 i\cf0  = 0; \cf5 i\cf0  < \cf5 sizearray\cf0 ; \cf5 i\cf0 ++) \{\
{\listtext	24	}	\cf5 array\cf0 [\cf5 i\cf0 ] = \cf5 s\cf0 .nextInt();\
{\listtext	25	}\
{\listtext	26	}\}\
{\listtext	27	}\
{\listtext	28	}
\f2\b \cf3 for
\f1\b0 \cf0  (
\f2\b \cf3 int
\f1\b0 \cf0  \cf5 x1\cf0  : \cf5 array\cf0 ) \{\
{\listtext	29	}	System.
\f3\i\b \cf7 out
\f1\i0\b0 \cf0 .print(\cf8 " "\cf0  + \cf5 x1\cf0 );\
{\listtext	30	}\}\
{\listtext	31	}\
{\listtext	32	}\}\
{\listtext	33	}\
{\listtext	34	}\}\
\pard\tx560\pardeftab720\partightenfactor0
\cf0 \
PYTHON USER INPUT:\
x=input('enter your number/string anything')\
print(x)\
\
\
\
\
\pard\pardeftab720\partightenfactor0
\ls2\ilvl0\cf0 {\listtext	1	}
\fs24 \
\pard\tx560\pardeftab720\sa210\partightenfactor0

\f0\fs18 \cf0 \cb2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa210\partightenfactor0
\ls3\ilvl0\cf0 {\listtext	1	}1	\expnd0\expndtw0\kerning0
What are the core concepts of OOPS?\cb1 \uc0\u8232 \cb2 OOPS core concepts are;\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa200\partightenfactor0
\ls3\ilvl1\cf0 \cb2 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
Abstraction\cb1 \
\ls3\ilvl1\cb2 \kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
Encapsulation\cb1 \
\ls3\ilvl1\cb2 \kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
Polymorphism\cb1 \
\ls3\ilvl1\cb2 \kerning1\expnd0\expndtw0 {\listtext	4	}\expnd0\expndtw0\kerning0
Inheritance\cb1 \
\ls3\ilvl1\cb2 \kerning1\expnd0\expndtw0 {\listtext	5	}\expnd0\expndtw0\kerning0
Composition\cb1 \
\ls3\ilvl1\cb2 \kerning1\expnd0\expndtw0 {\listtext	6	}\expnd0\expndtw0\kerning0
Association\cb1 \
\ls3\ilvl1\cb2 \kerning1\expnd0\expndtw0 {\listtext	7	}\expnd0\expndtw0\kerning0
Aggregation\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa210\partightenfactor0
\ls3\ilvl0\cf0 \cb2 \kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
What is Abstraction?\cb1 \uc0\u8232 \cb2 Abstraction is an OOPS concept to construct the structure of the real world objects. During this construction only the general states and behaviors are taken and more specific states and behaviors are left aside for the implementers.\cb1 \
\ls3\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
What is Encapsulation?\cb1 \uc0\u8232 \cb2 Encapsulation is an OOPS concept \cf4 to create and define the permissions and restrictions of an object and its member variables and methods. A very simple example to explain the concept is to make the member variables of a class private and providing public getter and setter methods.\cf0  Java provides four types of access level modifiers: public, protected, no modifier and private.\cb1 \
\ls3\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	4	}\expnd0\expndtw0\kerning0
What is the difference between Abstraction and Encapsulation?\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa200\partightenfactor0
\ls3\ilvl1\cf0 \cb2 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
\'93Program to interfaces, not implementations\'94 is the principle for Abstraction and \'93Encapsulate what varies\'94 is the OO principle for Encapsulation.\cb1 \
\ls3\ilvl1\cb2 \kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
Abstraction provides a general structure of a class and leaves the details for the implementers. Encapsulation is to create and define the permissions and restrictions of an object and its member variables and methods.\cb1 \
\ls3\ilvl1\cb2 \kerning1\expnd0\expndtw0 {\listtext	3	}\cf4 \expnd0\expndtw0\kerning0
Abstraction\cf0  is implemented in Java using \cf4 interface\cf0  and \cf4 abstract class\cf0  while Encapsulation is \cf4 implemented\cf0  using four types of access level modifiers: \cf4 public\cf0 , \cf4 protected\cf0 , \cf4 no modifier\cf0  and \cf4 private\cf0 .\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa210\partightenfactor0
\ls3\ilvl0\cf0 \cb2 \kerning1\expnd0\expndtw0 {\listtext	5	}\expnd0\expndtw0\kerning0
What is Polymorphism?\cb1 \uc0\u8232 \cb2 Polymorphism is the occurrence of something in various forms. Java supports various forms of polymorphism like polymorphic reference variables, polymorphic method, polymorphic return types and polymorphic argument types.\cb1 \
\ls3\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	6	}\expnd0\expndtw0\kerning0
What is Inheritance?\cb1 \uc0\u8232 \cb2 A subclass can inherit the states and behaviors of it\'92s super class is known as inheritance.\cb1 \
\ls3\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	7	}\expnd0\expndtw0\kerning0
What is multiple inheritance?\cb1 \uc0\u8232 \cb2 A child class inheriting states and behaviors from multiple parent classes is known as multiple inheritance.\cb1 \
\ls3\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	8	}\expnd0\expndtw0\kerning0
What is the \cf4 diamond problem\cf0  in inheritance?\cb1 \uc0\u8232 \cb2 In case of multiple inheritance, suppose class A has two subclasses B and C, and a class D has two super classes B and C.If a method present in A is overridden by both B and C but not by D then from which class D will inherit that method B or C? This problem is known as diamond problem. t\cf4 hus, multiple inheritance is not allowed! ie one child class can not extend more than one parent class\cb1 \
\ls3\ilvl0\cf0 \cb2 \kerning1\expnd0\expndtw0 {\listtext	9	}\expnd0\expndtw0\kerning0
Why Java does not support multiple inheritance?\cb1 \uc0\u8232 \cb2 Java was designed to be a simple language and multiple inheritance introduces complexities like diamond problem. Inheriting states or behaviors from two different type of classes is a case which in reality very rare and it can be achieved easily through an object association.\cb1 \
\ls3\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	10	}\expnd0\expndtw0\kerning0
What is \cf4 Static Binding \cf0 and \cf4 Dynamic Binding?\cf0 \cb1 \uc0\u8232 \cb2 Static or \cf4 early binding\cf0  is resolved at compile time. \cf4 Method overloading \cf0 is an example of static binding.\cb1 \uc0\u8232 \cb2 Dynamic or \cf4 late or virtual binding\cf0  is resolved at run time. \cf4 Method overriding \cf0 is an example of dynamic binding.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa210\partightenfactor0
\ls4\ilvl0\cf0 \cb2 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
What is a Class?\cb1 \uc0\u8232 \cb2 A class is the specification or template of an object.\cb1 \
\ls4\ilvl0\cb2 \kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
What is an Object?\cb1 \uc0\u8232 \cb2 Object is instance of class.\cb1 \
\pard\pardeftab720\qc\partightenfactor0

\f4\b \cf10 \
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb2 Java interview questions\
\pard\pardeftab720\sa210\partightenfactor0

\f5\b0 \cf10 What is Runtime Polymorphism?\cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf10 \cb2 Runtime polymorphism or dynamic method dispatch is a process in which a call to an overridden method is resolved at runtime rather than at compile-time.\cb1 \
\cb2 In this process, an overridden method is called through the reference variable of a super class. The\'a0\cb1 \
\pard\pardeftab720\sa210\partightenfactor0
\cf10 \cb2 \'a0What is the difference between abstraction and encapsulation?\cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf10 \cb2 Abstraction hides the implementation details whereas encapsulation wraps code and data into a single unit.\cb1 \
\
\pard\pardeftab720\sa210\partightenfactor0
\cf10 \cb2 \'a0What is abstract class?\cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf10 \cb2 A class that is declared as abstract is known as abstract class. It needs to be extended and its method implemented. It cannot be instantiated.\cb1 \
\pard\pardeftab720\sa210\partightenfactor0
\cf10 \cb2 \'a0Can there be any abstract method without abstract class?\cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf10 \cb2 No, if there is any abstract method in a class, that class must be abstract.\cb1 \
\pard\pardeftab720\sa210\partightenfactor0
\cf10 \cb2 Can you use abstract and final both with a method?\cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf10 \cb2 No, because abstract method needs to be overridden whereas you can't override final method.\cb1 \
\pard\pardeftab720\sa210\partightenfactor0
\cf10 \cb2 Is it possible to\'a0
\f4\b instantiate\'a0
\f5\b0 the abstract class?\cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf10 \cb2 No, abstract class can never be instantiated.\cb1 \
\pard\pardeftab720\sa400\partightenfactor0

\f4\b \cf10 \cb2 What is interface?
\f5\b0 \cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf10 \cb2 Interface is a blueprint of a class that have static constants and abstract methods.It can be used to achieve fully abstraction and multiple inheritance.\cb1 \
\
\cb2 \'a0Can you declare an interface method static?\cb1 \
\cb2 No, because methods of an interface is abstract by default, and \cf4 static and abstract keywords can't be used together.\cb1 \
\pard\pardeftab720\sa210\partightenfactor0
\cf10 \cb2 \'a0Can an Interface be final?\cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf10 \cb2 No, because its implementation is provided by another class.\cb1 \
\pard\pardeftab720\sa210\partightenfactor0
\cf10 \cb2 \'a0What is marker interface?\cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf10 \cb2 An interface that have no data member and method is known as a marker interface.For example Serializable, Cloneable etc.\cb1 \
\pard\pardeftab720\sa210\partightenfactor0
\cf10 \cb2 \'a0What is difference between abstract class and interface?\cb1 \

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth7646\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth4991\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f4\b \cf10 \cb2 Abstract class\cf0 \cb1 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf10 \cb2 Interface\
\
\cf4 Interface every item is public bydefault\cf0 \cb1 \cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth7646\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth4991\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f5\b0 \cf10 \cb2 1)An abstract class can have method body (non-abstract methods).\cf0 \cb1 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf10 \cb2 Interface have only abstract methods.\cf0 \cb1 \cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth7646\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth4991\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf4 \cb2 2)An abstract class can have instance variables. but it cant be instantiated\cf0 \cb1 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf4 \cb2 An interface cannot have instance variables. but its ref variable can store the class object.\
WebDriver driver=new ChromeDriver();\
//since chromeDriver class implements driver\
then this instanitation can be done\cf0 \cb1 \cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth7646\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth4991\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf10 \cb2 3)An abstract class can have constructor.\cf0 \cb1 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf10 \cb2 Interface cannot have constructor.\cf0 \cb1 \cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth7646\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth4991\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf10 \cb2 4)An abstract class can have static methods.\cf0 \cb1 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf10 \cb2 Interface cannot have static methods.\cf0 \cb1 \cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth7646\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth4991\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf10 \cb2 5)You can extends one abstract class.\cf0 \cb1 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf10 \cb2 You can implement multiple interfaces.\cf0 \cb1 \cell \lastrow\row
\pard\pardeftab720\sa210\partightenfactor0
\cf10 \cb2 \'a0Can we define private and protected modifiers for variables in interfaces?\cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf10 \cb2 No, they are implicitly public.\cb1 \
\pard\pardeftab720\sa210\partightenfactor0
\cf10 \cb2 \'a0When can an object reference be cast to an interface reference?\cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf10 \cb2 An object reference can be cast to an interface reference when the object implements the referenced interface.\cb1 \
}{\*\beandata789c9d935d6f82301486aff157748db752d876b12d8851c1c4cc2099b86497153a65e32ba5cef1ef57444aeb66b68c1bda73fabe4f7b4e6b8d3ed3047c105ac6793684a66e4040b2308fe26c3b84eb6036b88323bb675d39cb69f0e2bba048e292017f3d59cca7000e101a17454210720207f88bf92a00dc0321d78300ee182b1e103a1c0e3aae57e9619ed60b4be4d3bc2094550b6e36e0023d6211e498c65dd90e8f4671c8ec9e66bd93caee631aee62bec242f594474b46f9666d6ff5482a128d45fa146f75f9e68d84ac14324c29ae07c2a09fed934492692d573b3984092e855e4e37f9e9acbf9e3b5d5eb3e28c912da1f6ad85dae1518854636fa5f39fec2cf6a6502e603aceb5ca5140a8f36ca16715f93ff7e64fdc2eda567ce28ebd27f6ead6f78d778ef1e866cf48f9dcf4dfdba71ba591d2490dd334ee0df5c03ff68b5c3a9fb8360e57711aa6958c92572c8f8552b2dfead9d0329c1289f70b4354a4736bbc585e887b2a8a56cf2704670e665830cece7cde24513053ad540756ded6e9e109b6501bf52759b43a0b1d5facddfb02aa1d4161}